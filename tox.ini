[tox]
envlist =
    check-{style,security,dependencies,build}
    test{,-alldeps,-devdeps}{,-pyargs,-warnings,-regtests,-cov}
    test-numpy{120,121,122}
    build-{docs,dist}
isolated_build = true

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
description = check code style, e.g. with flake8
skip_install = true
deps =
    flake8
commands =
    flake8 . {posargs}

[testenv:check-security]
description = run bandit to check security compliance
skip_install = true
deps =
    bandit>=1.7
commands =
    bandit romancal -r -x tests,regtest

[testenv:check-dependencies]
description = verify that modules can be imported
# `extras` needs to be empty to check modules without additional dependencies
extras =
deps =
    pytest
commands =
    verify_install_requires

[testenv:check-build]
description = check build sdist/wheel and a strict twine check for metadata
skip_install = true
deps =
    twine>=3.3
    build
commands =
    python -m build .
    twine check --strict dist/*

[testenv]
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    regtests: with --bigdata and --slow flags
    cov: with coverage
    xdist: using parallel processing
    ddtrace: passing test traces to DataDog agent
passenv =
    HOME
    CI
    TOXENV
    CRDS_*
    TEST_BIGDATA
    CODECOV_*
setenv =
    ddtrace: DD_SERVICE=romancal
    ddtrace: DD_ENV=ci
args_are_paths = false
change_dir = pyargs: {homedir}
extras =
    test
    alldeps: all
deps =
    xdist: pytest-xdist
    devdeps: -rrequirements-dev.txt
    numpy120: numpy==1.20.*
    numpy121: numpy==1.21.*
    numpy122: numpy==1.22.*
    ddtrace: ddtrace
commands_pre =
    pip freeze
commands =
    pytest \
    cov: --cov=. --cov-config=pyproject.toml --cov-report=term-missing --cov-report=xml \
    warnings: -W error \
    regtests: --bigdata --slow --basetemp={homedir}/test_outputs \
    xdist: -n auto \
    pyargs: {toxinidir}/docs --pyargs {posargs:romancal} \
    ddtrace: --ddtrace \
    {posargs}

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build -W docs docs/_build

[testenv:build-dist]
description = build wheel and sdist
skip_install = true
deps =
    build
commands =
    python -m build .
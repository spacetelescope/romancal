[tox]
envlist =
    py{38,39}-test{,-alldeps}
    py38-test-devdeps
    py38-cov
    py{38,}-test-numpy{119,120}
    build_docs
    codestyle
    bandit
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true

[testenv]

# Pass through the following environment variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI TOXENV CRDS_* TEST_BIGDATA CODECOV_*

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    cov: and test coverage
    numpy117: with numpy 1.17.*
    numpy119: with numpy 1.19.*

# The following provides some specific pinnings for key packages
deps =
    cov: coverage
    numpy120: numpy==1.20.*
    numpy118: numpy==1.18.*
    numpy119: numpy==1.19.*

    devdeps: git+https://github.com/numpy/numpy
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy
    devdeps: git+https://github.com/asdf-format/asdf
    devdeps: git+https://github.com/spacetelescope/stpipe
    devdeps: git+https://github.com/spacetelescope/stdatamodels


# The following indicates which extras_require from setup.cfg will be installed
extras =
    test
    alldeps: all

commands =
    pip freeze
    !cov: pytest {posargs}
    cov: pytest --cov-report xml --cov romancal {posargs}

[testenv:pyargs]
changedir = {homedir}
commands =
    pyargs: pytest {toxinidir}/docs --pyargs {posargs:romancal}

[testenv:build_docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W docs docs/_build

[testenv:codestyle]
skip_install = true
description = check code style, e.g. with flake8
deps = flake8
commands = flake8 {posargs}

[testenv:bandit]
deps=
    bandit
commands=
    bandit romancal -r -x tests,regtest

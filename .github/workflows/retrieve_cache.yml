# retrieves the latest cache key for STPSF data;
# the cache key is in the form `stpsf-data-mini-1.3.0`,
# `stpsf-data-full-1.2.6`, etc.
#
# to retrieve the STPSF data cache in your test workflow,
# first create a cache of the dataset in your repository
# (see `download_data.yml` for instructions), then
# call this workflow as a needed job and use `actions/cache/restore`
# to place the data in your test job:
#
# # .github/workflows/tests.yml
# name: run tests
# ...
# jobs:
#   stpsf_data_cache_key:
#     uses: spacetelescope/stpsf/.github/workflows/retrieve_cache.yml@beda656c80a0254e6f80649d9c9c49235634522f  # v1.4.0
#     with:
#       minimal: true
#   tests:
#     needs: [ stpsf_data_cache_key ]
#     steps:
#       ...
#       - name: retrieve STPSF data cache
#        uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9  # v4.0.2
#        with:
#          path: ${{ runner.temp }}/stpsf-data
#          key: ${{ needs.stpsf_data_cache_key.outputs.cache_key }}
#       ...

name: retrieve latest data cache key

on:
  workflow_call:
    inputs:
      minimal:
        description: minimal dataset
        type: boolean
        required: false
        default: true
    outputs:
      version:
        value: ${{ jobs.retrieve_latest_cache_key.outputs.version }}
      cache_path:
        value: ${{ jobs.retrieve_latest_cache_key.outputs.cache_path }}
      cache_key:
        value: ${{ jobs.retrieve_latest_cache_key.outputs.cache_key }}

jobs:
  retrieve_latest_cache_key:
    name: retrieve latest STPSF data cache key
    runs-on: ubuntu-latest
    steps:
      - name: retrieve latest data cache key
        id: latest_cache_key
        run: |
          # use actions/gh-actions-cache to allow filtering by key
          gh extension install actions/gh-actions-cache
          CACHE_KEY=$(gh actions-cache list -R ${{ github.repository }} --key stpsf-data-${{ inputs.minimal && 'mini' || 'full' }}- --sort created-at | cut -f 1 | head -n 1)
          if [ "$CACHE_KEY" == '' ]; then exit 1; fi
          echo cache_key=$CACHE_KEY >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}
      - run: echo ${{ steps.latest_cache_key.outputs.cache_key }}
      - id: version
        run: echo "version=$(echo ${{ steps.latest_cache_key.outputs.cache_key }} | awk -F '-' '{print $4}')" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.version.outputs.version }}
      cache_path: ${{ runner.temp }}/data/
      cache_key: ${{ steps.latest_cache_key.outputs.cache_key }}

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches:
      - main
      - '*.x'
    tags:
      - '*'
  pull_request:
    branches:
  schedule:
    # Weekly Monday 9AM build
    # * is a special character in YAML so you have to quote this string
    - cron: '0 9 * * 1'

env:
  CRDS_SERVER_URL: "https://roman-crds-test.stsci.edu"
  CRDS_PATH: "/tmp/crds_cache"
  CRDS_CLIENT_RETRY_COUNT: 3
  CRDS_CLIENT_RETRY_DELAY_SECONDS: 20

jobs:
  tox:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Code style checks
            os: ubuntu-latest
            python: 3.x
            toxenv: codestyle

          - name: Python 3.10
            python-version: '3.10'
            os: ubuntu-latest
            toxenv: py310-test

          - name: Python 3.8
            os: ubuntu-latest
            python-version: '3.8'
            toxenv: py38-test

          - name: Python 3.9
            os: ubuntu-latest
            python-version: '3.9'
            toxenv: py39-test

          - name: Python 3.8 with dev dependencies
            os: ubuntu-latest
            python-version: '3.8'
            toxenv: py38-test-devdeps

          - name: Python 3.8 with Numpy 1.20
            os: ubuntu-latest
            python-version: '3.8'
            toxenv: py38-test-numpy120

          - name: macOS
            os: macos-latest
            python-version: '3.9'
            toxenv: py39-test

          - name: Security audit
            os: ubuntu-latest
            python: 3.9
            toxenv: bandit

          - name: Installed package with --pyargs
            os: ubuntu-latest
            python: 3.8
            toxenv: pyargs

          - name: Build documentation and check warnings
            os: ubuntu-latest
            python: 3.8
            toxenv: build_docs

          - name: Latest dependency versions w/coverage
            os: ubuntu-latest
            python: 3.8
            toxenv: py38-cov

    steps:
    - name: Install system packages
      if: ${{ contains(matrix.toxenv,'build_docs') }}
      run: |
        sudo apt update -y
        sudo apt-get install graphviz texlive-latex-extra dvipng
    - name: Checkout code
      uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[test]

    - name: Install tox
      run: |
        pip install tox

    - name: Run tests
      run: tox -e ${{ matrix.toxenv }}

    - name: Upload coverage to codecov
      if: ${{ contains(matrix.toxenv,'-cov') }}
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml

  test_older_numpy:
    name: test Numpy ${{ matrix.numpy }} (Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python: [ 3.8, 3.9, '3.10' ]
        numpy: [ '1.18.*', '1.19.*', '1.20.*', '1.21.*', '1.22.*' ]
        exclude:
          - python: '3.10'
            numpy: '1.18.*'
          - python: '3.10'
            numpy: '1.19.*'
          - python: '3.10'
            numpy: '1.20.*'
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@main
        id: python
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@main
        with:
          path: ${{ env.pythonLocation }}
          key: test-numpy${{ matrix.numpy }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - run: pip install -e ".[test]" pytest-xdist
      - run: pip install numpy==${{ matrix.numpy }}
      - run: pip freeze
      - run: pytest -n auto